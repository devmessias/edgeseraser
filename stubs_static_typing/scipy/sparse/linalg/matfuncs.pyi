from scipy.sparse.linalg.interface import LinearOperator
from typing import Any

def inv(A): ...

class MatrixPowerOperator(LinearOperator):
    dtype: Any
    ndim: Any
    shape: Any
    def __init__(self, A, p, structure: Any | None = ...) -> None: ...
    @property
    def T(self): ...

class ProductOperator(LinearOperator):
    shape: Any
    ndim: Any
    dtype: Any
    def __init__(self, *args, **kwargs) -> None: ...
    @property
    def T(self): ...

class _ExpmPadeHelper:
    A: Any
    ident: Any
    structure: Any
    use_exact_onenorm: Any
    def __init__(self, A, structure: Any | None = ..., use_exact_onenorm: bool = ...) -> None: ...
    @property
    def A2(self): ...
    @property
    def A4(self): ...
    @property
    def A6(self): ...
    @property
    def A8(self): ...
    @property
    def A10(self): ...
    @property
    def d4_tight(self): ...
    @property
    def d6_tight(self): ...
    @property
    def d8_tight(self): ...
    @property
    def d10_tight(self): ...
    @property
    def d4_loose(self): ...
    @property
    def d6_loose(self): ...
    @property
    def d8_loose(self): ...
    @property
    def d10_loose(self): ...
    def pade3(self): ...
    def pade5(self): ...
    def pade7(self): ...
    def pade9(self): ...
    def pade13_scaled(self, s): ...

def expm(A): ...
