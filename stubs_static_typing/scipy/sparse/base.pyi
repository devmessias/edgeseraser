from typing import Any

class SparseWarning(Warning): ...
class SparseFormatWarning(SparseWarning): ...
class SparseEfficiencyWarning(SparseWarning): ...

class spmatrix:
    __array_priority__: float
    ndim: int
    maxprint: Any
    def __init__(self, maxprint=...) -> None: ...
    __dict__: Any
    def set_shape(self, shape) -> None: ...
    def get_shape(self): ...
    shape: Any
    def reshape(self, *args, **kwargs): ...
    def resize(self, shape) -> None: ...
    def astype(self, dtype, casting: str = ..., copy: bool = ...): ...
    def asfptype(self): ...
    def __iter__(self): ...
    def getmaxprint(self): ...
    def count_nonzero(self) -> None: ...
    def getnnz(self, axis: Any | None = ...) -> None: ...
    @property
    def nnz(self): ...
    def getformat(self): ...
    def __bool__(self): ...
    __nonzero__: Any
    def __len__(self) -> None: ...
    def asformat(self, format, copy: bool = ...): ...
    def multiply(self, other): ...
    def maximum(self, other): ...
    def minimum(self, other): ...
    def dot(self, other): ...
    def power(self, n, dtype: Any | None = ...): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __lt__(self, other): ...
    def __gt__(self, other): ...
    def __le__(self, other): ...
    def __ge__(self, other): ...
    def __abs__(self): ...
    def __round__(self, ndigits: int = ...): ...
    def __add__(self, other): ...
    def __radd__(self, other): ...
    def __sub__(self, other): ...
    def __rsub__(self, other): ...
    def __mul__(self, other): ...
    def __rmul__(self, other): ...
    def __matmul__(self, other): ...
    def __rmatmul__(self, other): ...
    def __truediv__(self, other): ...
    def __div__(self, other): ...
    def __rtruediv__(self, other): ...
    def __rdiv__(self, other): ...
    def __neg__(self): ...
    def __iadd__(self, other): ...
    def __isub__(self, other): ...
    def __imul__(self, other): ...
    def __idiv__(self, other): ...
    def __itruediv__(self, other): ...
    def __pow__(self, other): ...
    def __getattr__(self, attr): ...
    def transpose(self, axes: Any | None = ..., copy: bool = ...): ...
    def conj(self, copy: bool = ...): ...
    def conjugate(self, copy: bool = ...): ...
    def getH(self): ...
    def nonzero(self): ...
    def getcol(self, j): ...
    def getrow(self, i): ...
    def todense(self, order: Any | None = ..., out: Any | None = ...): ...
    def toarray(self, order: Any | None = ..., out: Any | None = ...): ...
    def tocsr(self, copy: bool = ...): ...
    def todok(self, copy: bool = ...): ...
    def tocoo(self, copy: bool = ...): ...
    def tolil(self, copy: bool = ...): ...
    def todia(self, copy: bool = ...): ...
    def tobsr(self, blocksize: Any | None = ..., copy: bool = ...): ...
    def tocsc(self, copy: bool = ...): ...
    def copy(self): ...
    def sum(self, axis: Any | None = ..., dtype: Any | None = ..., out: Any | None = ...): ...
    def mean(self, axis: Any | None = ..., dtype: Any | None = ..., out: Any | None = ...): ...
    def diagonal(self, k: int = ...): ...
    def setdiag(self, values, k: int = ...) -> None: ...

def isspmatrix(x): ...
issparse = isspmatrix
