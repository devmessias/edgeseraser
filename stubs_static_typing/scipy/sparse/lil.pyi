from ._index import IndexMixin
from .base import spmatrix
from typing import Any

class lil_matrix(spmatrix, IndexMixin):
    format: str
    dtype: Any
    rows: Any
    data: Any
    def __init__(self, arg1, shape: Any | None = ..., dtype: Any | None = ..., copy: bool = ...) -> None: ...
    def __iadd__(self, other): ...
    def __isub__(self, other): ...
    def __imul__(self, other): ...
    def __itruediv__(self, other): ...
    def getnnz(self, axis: Any | None = ...): ...
    def count_nonzero(self): ...
    def getrowview(self, i): ...
    def getrow(self, i): ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, x): ...
    def __truediv__(self, other): ...
    def copy(self): ...
    def reshape(self, *args, **kwargs): ...
    def resize(self, *shape) -> None: ...
    def toarray(self, order: Any | None = ..., out: Any | None = ...): ...
    def transpose(self, axes: Any | None = ..., copy: bool = ...): ...
    def tolil(self, copy: bool = ...): ...
    def tocsr(self, copy: bool = ...): ...

def isspmatrix_lil(x): ...
